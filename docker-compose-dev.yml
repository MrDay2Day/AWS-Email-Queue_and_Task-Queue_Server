name: ${APP_CONTAINER_NAME}-container-dev
services:
  aws-queue-mysql-db:
    image: mysql:8.0
    container_name: server-mysql
    restart: unless-stopped
    networks:
      - main_network
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: d2d_email_queue
      MYSQL_USER: main_user
      MYSQL_PASSWORD: user_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql/my.cnf:/etc/mysql/my.cnf
    ports:
      - "3020:3306"
    # healthcheck:
    #   test:
    #     [
    #       "CMD",
    #       "mysqladmin",
    #       "ping",
    #       "-h",
    #       "localhost",
    #       "-u",
    #       "root",
    #       "-p",
    #       "root_password",
    #     ]
    #   interval: 10s
    #   retries: 5
    #   timeout: 5s
    #   start_period: 30s

  aws-queue-node-server:
    restart: unless-stopped
    networks:
      - main_network
    environment:
      - NODE_ENV=dev
      - PORT=${PORT}
      - APP_CONTAINER_NAME=${APP_CONTAINER_NAME}
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        NODE_VERSION: ${NODE_VERSION}
        PORT: ${PORT}
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    container_name: ${APP_CONTAINER_NAME}-Development
    expose:
      - ${PORT}
    ports:
      - "${PORT}:${PORT}"
    command: npx ts-node-dev --poll --watch ./src/* --respawn ./src/server.ts
    depends_on:
      - aws-queue-mysql-db

networks:
  main_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
